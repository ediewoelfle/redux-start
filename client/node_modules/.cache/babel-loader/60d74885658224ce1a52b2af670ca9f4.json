{"ast":null,"code":"var _jsxFileName = \"/Users/ediewoelfle/Developer/radiotrax-code-challenge/client/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Login } from \"./screens/Login\";\nimport { Devices } from \"./screens/Devices\";\nimport * as R from \"ramda\";\nimport axios from \"axios\";\nimport { login, newData, filter, reset, sort } from \"./redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst url = \"http://localhost:3000/devices\";\n\nconst App = () => {\n  const logged = useSelector(state => state.loggedReducer);\n  const data = useSelector(state => state.dataReducer);\n  const dispatch = useDispatch(); // basic login to retrieve data\n\n  const signin = values => {\n    const credentials = btoa(\"\".concat(values.username, \":\").concat(values.password));\n    axios.get(url, {\n      headers: {\n        authorization: \"Basic \".concat(credentials)\n      }\n    }).then(response => {\n      dispatch(newData(response.data));\n      dispatch(login());\n    }, error => {\n      alert(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, !logged && React.createElement(Login, {\n    login: signin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Devices, {\n    devices: data,\n    sortBy: sortBy,\n    filterBy: filterBy,\n    reset: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ediewoelfle/Developer/radiotrax-code-challenge/client/src/App.js"],"names":["React","Login","Devices","R","axios","login","newData","filter","reset","sort","useSelector","useDispatch","url","App","logged","state","loggedReducer","data","dataReducer","dispatch","signin","values","credentials","btoa","username","password","get","headers","authorization","then","response","error","alert","sortBy","filterBy"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,IAAxC,QAAoD,iBAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,MAAMC,GAAG,GAAG,+BAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,aAAhB,CAA1B;AACA,QAAMC,IAAI,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACG,WAAhB,CAAxB;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAJgB,CAMhB;;AACA,QAAMS,MAAM,GAAGC,MAAM,IAAI;AACvB,UAAMC,WAAW,GAAGC,IAAI,WAAIF,MAAM,CAACG,QAAX,cAAuBH,MAAM,CAACI,QAA9B,EAAxB;AAEArB,IAAAA,KAAK,CACFsB,GADH,CACOd,GADP,EACY;AACRe,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,kBAAWN,WAAX;AADN;AADD,KADZ,EAMGO,IANH,CAOIC,QAAQ,IAAI;AACVX,MAAAA,QAAQ,CAACb,OAAO,CAACwB,QAAQ,CAACb,IAAV,CAAR,CAAR;AACAE,MAAAA,QAAQ,CAACd,KAAK,EAAN,CAAR;AACD,KAVL,EAWI0B,KAAK,IAAI;AACPC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KAbL;AAeD,GAlBD;;AAoBA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACjB,MAAD,IAAW,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEH,IADX;AAEE,IAAA,MAAM,EAAEgB,MAFV;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,KAAK,EAAE1B,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD,CAtCD;;AAwCA,eAAeK,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Login } from \"./screens/Login\";\nimport { Devices } from \"./screens/Devices\";\nimport * as R from \"ramda\";\nimport axios from \"axios\";\nimport { login, newData, filter, reset, sort } from \"./redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst url = \"http://localhost:3000/devices\";\n\nconst App = () => {\n  const logged = useSelector(state => state.loggedReducer);\n  const data = useSelector(state => state.dataReducer);\n\n  const dispatch = useDispatch();\n\n  // basic login to retrieve data\n  const signin = values => {\n    const credentials = btoa(`${values.username}:${values.password}`);\n\n    axios\n      .get(url, {\n        headers: {\n          authorization: `Basic ${credentials}`\n        }\n      })\n      .then(\n        response => {\n          dispatch(newData(response.data));\n          dispatch(login());\n        },\n        error => {\n          alert(error);\n        }\n      );\n  };\n\n  return (\n    <div className=\"App\">\n      {!logged && <Login login={signin} />}\n      <Devices\n        devices={data}\n        sortBy={sortBy}\n        filterBy={filterBy}\n        reset={reset}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}