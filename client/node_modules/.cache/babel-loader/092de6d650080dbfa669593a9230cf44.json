{"ast":null,"code":"var _jsxFileName = \"/Users/ediewoelfle/Developer/radiotrax-code-challenge/client/src/screens/Login.js\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nexport const Login = props => {\n  const login = props.login;\n  return React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().required(\"Username required.\").min(2, \"Too Short!\").max(50, \"Too Long!\").matches(/^[a-zA-Z]+$/, \"Username must only be letters!\"),\n      password: Yup.string().required(\"Password required.\").min(2, \"Too Short!\").max(50, \"Too Long!\")\n    }),\n    onSubmit: (values, actions) => {\n      login(values);\n    },\n    render: ({\n      errors,\n      status,\n      touched,\n      isSubmitting\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), errors.username && touched.username && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, errors.username), React.createElement(Field, {\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, errors.password), status && status.msg && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, status.msg), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Submit\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ediewoelfle/Developer/radiotrax-code-challenge/client/src/screens/Login.js"],"names":["React","Formik","Form","Field","Yup","Login","props","login","username","password","object","shape","string","required","min","max","matches","values","actions","errors","status","touched","isSubmitting","msg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA,QACpBC,KADoB,GACVD,KADU,CACpBC,KADoB;AAE5B,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,gBAAgB,EAAEL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,MAAAA,QAAQ,EAAEJ,GAAG,CAACQ,MAAJ,GACPC,QADO,CACE,oBADF,EAEPC,GAFO,CAEH,CAFG,EAEA,YAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,WAHD,EAIPC,OAJO,CAIC,aAJD,EAIgB,gCAJhB,CADyB;AAMnCP,MAAAA,QAAQ,EAAEL,GAAG,CAACQ,MAAJ,GACPC,QADO,CACE,oBADF,EAEPC,GAFO,CAEH,CAFG,EAEA,YAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,WAHD;AANyB,KAAnB,CAFpB;AAaE,IAAA,QAAQ,EAAE,CAACE,MAAD,EAASC,OAAT,KAAqB;AAC7BX,MAAAA,KAAK,CAACU,MAAD,CAAL;AACD,KAfH;AAgBE,IAAA,MAAM,EAAE,CAAC;AAAEE,MAAAA,MAAF;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA,OAAlB;AAA2BC,MAAAA;AAA3B,KAAD,KACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGH,MAAM,CAACX,QAAP,IAAmBa,OAAO,CAACb,QAA3B,IAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMW,MAAM,CAACX,QAAb,CAF1C,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIGW,MAAM,CAACV,QAAP,IAAmBY,OAAO,CAACZ,QAA3B,IAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMU,MAAM,CAACV,QAAb,CAJ1C,EAKGW,MAAM,IAAIA,MAAM,CAACG,GAAjB,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMH,MAAM,CAACG,GAAb,CAL3B,EAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAED,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA+BD,CAjCM","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport const Login = props => {\n  const { login } = props;\n  return (\n    <Formik\n      initialValues={{ username: \"\", password: \"\" }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string()\n          .required(\"Username required.\")\n          .min(2, \"Too Short!\")\n          .max(50, \"Too Long!\")\n          .matches(/^[a-zA-Z]+$/, \"Username must only be letters!\"),\n        password: Yup.string()\n          .required(\"Password required.\")\n          .min(2, \"Too Short!\")\n          .max(50, \"Too Long!\")\n      })}\n      onSubmit={(values, actions) => {\n        login(values);\n      }}\n      render={({ errors, status, touched, isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"username\" />\n          {errors.username && touched.username && <div>{errors.username}</div>}\n          <Field type=\"password\" name=\"password\" />\n          {errors.password && touched.password && <div>{errors.password}</div>}\n          {status && status.msg && <div>{status.msg}</div>}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}