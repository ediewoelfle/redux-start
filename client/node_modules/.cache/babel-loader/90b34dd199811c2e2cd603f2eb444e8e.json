{"ast":null,"code":"var _jsxFileName = \"/Users/ediewoelfle/Developer/radiotrax-code-challenge/client/src/screens/Login.js\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { login, newData, reset } from \"./redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nexport const Login = props => {\n  const url = props.url;\n  const logged = useSelector(state => state.loggedReducer);\n  const dispatch = useDispatch();\n  if (logged) return null; // basic login to retrieve data\n\n  const signin = values => {\n    const credentials = btoa(\"\".concat(values.username, \":\").concat(values.password));\n    axios.get(url, {\n      headers: {\n        authorization: \"Basic \".concat(credentials)\n      }\n    }).then(response => {\n      dispatch(newData(response.data));\n      dispatch(reset(response.data));\n      dispatch(login());\n    }, error => {\n      alert(error);\n    });\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().required(\"Username required.\").min(2, \"Too Short!\").max(50, \"Too Long!\").matches(/^[a-zA-Z]+$/, \"Username must only be letters!\"),\n      password: Yup.string().required(\"Password required.\").min(2, \"Too Short!\").max(50, \"Too Long!\")\n    }),\n    onSubmit: (values, actions) => {\n      login(values);\n    },\n    render: ({\n      errors,\n      status,\n      touched,\n      isSubmitting\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), errors.username && touched.username && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, errors.username), React.createElement(Field, {\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), errors.password && touched.password && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, errors.password), status && status.msg && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, status.msg), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Submit\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/ediewoelfle/Developer/radiotrax-code-challenge/client/src/screens/Login.js"],"names":["React","Formik","Form","Field","Yup","axios","login","newData","reset","useSelector","useDispatch","Login","props","url","logged","state","loggedReducer","dispatch","signin","values","credentials","btoa","username","password","get","headers","authorization","then","response","data","error","alert","object","shape","string","required","min","max","matches","actions","errors","status","touched","isSubmitting","msg"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { login, newData, reset } from \"./redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport const Login = props => {\n  const { url } = props;\n  const logged = useSelector(state => state.loggedReducer);\n  const dispatch = useDispatch();\n\n  if (logged) return null;\n\n  // basic login to retrieve data\n  const signin = values => {\n    const credentials = btoa(`${values.username}:${values.password}`);\n\n    axios\n      .get(url, {\n        headers: {\n          authorization: `Basic ${credentials}`\n        }\n      })\n      .then(\n        response => {\n          dispatch(newData(response.data));\n          dispatch(reset(response.data));\n          dispatch(login());\n        },\n        error => {\n          alert(error);\n        }\n      );\n  };\n\n  return (\n    <Formik\n      initialValues={{ username: \"\", password: \"\" }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string()\n          .required(\"Username required.\")\n          .min(2, \"Too Short!\")\n          .max(50, \"Too Long!\")\n          .matches(/^[a-zA-Z]+$/, \"Username must only be letters!\"),\n        password: Yup.string()\n          .required(\"Password required.\")\n          .min(2, \"Too Short!\")\n          .max(50, \"Too Long!\")\n      })}\n      onSubmit={(values, actions) => {\n        login(values);\n      }}\n      render={({ errors, status, touched, isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"username\" />\n          {errors.username && touched.username && <div>{errors.username}</div>}\n          <Field type=\"password\" name=\"password\" />\n          {errors.password && touched.password && <div>{errors.password}</div>}\n          {status && status.msg && <div>{status.msg}</div>}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}